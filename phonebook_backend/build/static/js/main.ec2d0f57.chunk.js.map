{"version":3,"sources":["services/persons.js","components/Input.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newObject","post","id","put","delete","Input","text","value","onChange","PersonForm","onSubmit","input","map","i","type","Person","name","number","handleDelete","onClick","Persons","persons","filter","remove","filtered","person","toLowerCase","indexOf","Notification","error","success","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","initial","inputObject","e","target","preventDefault","nameExists","find","length","window","confirm","update","updated","setTimeout","p","catch","console","log","personObject","created","concat","response","deleted","changed","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec2d0f57.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl);\r\n    return req.then(res => res.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    const req = axios.post(baseUrl, newObject);\r\n    return req.then(res => res.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return req.then(res => res.data);\r\n}\r\n\r\nconst remove = (id) => {\r\n    const req = axios.delete(`${baseUrl}/${id}`);\r\n    return req.then(res => res.data);\r\n}\r\n\r\nexport default { getAll, create, update, remove };","import React from 'react';\r\n\r\nconst Input = ({text, value, onChange}) => (<div>{text}: <input value={value} onChange={onChange}/></div>);\r\n\r\nexport default Input;","import React from 'react';\r\nimport Input from './Input';\r\n\r\nconst PersonForm = ({onSubmit, input}) => (\r\n  <form onSubmit={onSubmit}>\r\n    {input.map(i => (<Input key={i.id} text={i.text} value={i.value} onChange={i.onChange} />))}\r\n    <div>\r\n      <button type='submit'>Add</button>\r\n    </div>\r\n  </form>\r\n);\r\n\r\nexport default PersonForm;","import React from 'react';\r\n\r\nconst Person = ({name, number, handleDelete}) => (\r\n  <li>\r\n    {name} {number}\r\n    <button onClick={handleDelete}>Delete</button>\r\n  </li>\r\n);\r\nconst Persons = ({persons, filter, remove}) => {\r\n  let filtered = persons.filter(person => person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n  return (\r\n    <ul>{\r\n      filtered.map(person => <Person key={person.id} name={person.name} number={person.number} handleDelete={() => remove(person.id)} />)\r\n    }</ul>\r\n  );\r\n}\r\nexport default Persons;","import React from 'react';\r\n\r\nconst Notification = ({error, success}) => {\r\n    if(error === null && success === null) {\r\n        return null;\r\n    }\r\n    let className = 'success';\r\n    if(error !== null) {\r\n        className = 'error';\r\n    }\r\n    return(\r\n        <div className={`${className} notification`}>{success !== null ? success : error}</div>\r\n    );\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Input from './components/Input';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filter, setFilter ] = useState('');\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initial => {\n        setPersons(initial);\n      });\n  }, []);\n\n  const addPersons = (e) => {\n    e.preventDefault();\n    let nameExists = persons.find(person => person.name.toLowerCase() === newName.toLowerCase());\n    if(newName.length === 0){\n      setErrorMessage('Please enter name');\n    }\n    if(nameExists) {\n      if(window.confirm(`${nameExists.name} is already added to phonebook. replace the old number with a new one?`)){\n        const update = {...nameExists, number: newNumber};\n        return personService\n          .update(nameExists.id, update)\n          .then(updated => {\n            setSuccessMessage(`Changed ${updated.name}'s number`);\n            setTimeout(() => {              \n              setSuccessMessage(null);\n            }, 5000);\n            setPersons(persons.map(p => p.id !== nameExists.id ? p : updated));\n            setNewName('');\n            setNewNumber('');\n          })\n          .catch(e => {\n            console.log(e)\n            setErrorMessage(`Information of ${nameExists.name} has already been removed from server`);\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n            setPersons(persons.filter(p => p.id !== nameExists.id))\n          });\n      }else{\n        return setErrorMessage(`${newName} is already added to phonebook`);\n      }\n    }\n    const personObject = {\n      id: persons[persons.length - 1].id + 1,\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(personObject)\n      .then(created => {\n        setSuccessMessage(`Added ${created.name}`);\n        setTimeout(() => {              \n          setSuccessMessage(null);\n        }, 5000);\n        setPersons(persons.concat(created));\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch(e => {\n        setErrorMessage(e.response.data.error);\n        setTimeout(() => {              \n          setErrorMessage(null);\n        }, 5000);\n        console.log(e.response.data)\n      });\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  }\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  }\n\n  const handleDelete = (id) => {\n    const deleted = persons.find(person => person.id === id);\n    if(window.confirm(`Delete ${deleted.name}?`)){\n      personService\n        .remove(id)\n        .then(() => {\n          const changed = [...persons];\n          changed.splice(persons.indexOf(deleted), 1);\n          setPersons(changed);\n        });\n    }\n  }\n\n  let inputObject = [\n    {\n      id: 1,\n      text: 'Name',\n      value: newName,\n      onChange: handleNameChange\n    },\n    {\n      id: 2,\n      text: 'Number',\n      value: newNumber,\n      onChange: handleNumberChange\n    }\n  ]\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification success={successMessage} error={errorMessage} />\n        <Input text='Filter shown with' value={filter} onChange={handleFilterChange} />\n      <h3>Add New</h3>\n      <PersonForm onSubmit={addPersons} input={inputObject} />\n      <h3>Numbers</h3>\n      <div>\n        <Persons persons={persons} filter={filter} remove={handleDelete} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}